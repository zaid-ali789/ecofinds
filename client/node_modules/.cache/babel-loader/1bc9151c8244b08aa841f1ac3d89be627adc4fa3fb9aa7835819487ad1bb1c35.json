{"ast":null,"code":"var _jsxFileName = \"D:\\\\ecofinds\\\\client\\\\src\\\\pages\\\\CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { CartContext } from \"../context/CartContext\";\nimport api from \"../services/api\";\nimport ProductCard from \"../components/ProductCard\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CartPage() {\n  _s();\n  const {\n    cart,\n    removeFromCart,\n    clearCart\n  } = useContext(CartContext);\n  const handleOrder = async () => {\n    // Simple: send product IDs\n    await api.createOrder({\n      productIds: cart.map(item => item.id)\n    });\n    clearCart();\n    alert(\"Order placed!\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"My Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No items in cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cart.map(item => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: item,\n        onAddToCart: () => removeFromCart(item.id),\n        showAddToCart: false\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleOrder,\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        color: \"secondary\",\n        onClick: clearCart,\n        children: \"Clear Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(CartPage, \"1nH1emwRlXH8JuZw9PyfutI33QM=\");\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useContext","CartContext","api","ProductCard","Box","Typography","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","CartPage","_s","cart","removeFromCart","clearCart","handleOrder","createOrder","productIds","map","item","id","alert","sx","mt","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","product","onAddToCart","showAddToCart","color","onClick","_c","$RefreshReg$"],"sources":["D:/ecofinds/client/src/pages/CartPage.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { CartContext } from \"../context/CartContext\";\r\nimport api from \"../services/api\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport { Box, Typography, Button } from \"@mui/material\";\r\n\r\nfunction CartPage() {\r\n  const { cart, removeFromCart, clearCart } = useContext(CartContext);\r\n\r\n  const handleOrder = async () => {\r\n    // Simple: send product IDs\r\n    await api.createOrder({ productIds: cart.map(item => item.id) });\r\n    clearCart();\r\n    alert(\"Order placed!\");\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\">My Cart</Typography>\r\n      {cart.length === 0\r\n        ? <Typography>No items in cart.</Typography>\r\n        : <>\r\n            {cart.map(item => (\r\n              <ProductCard key={item.id} product={item} onAddToCart={() => removeFromCart(item.id)} showAddToCart={false} />\r\n            ))}\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleOrder}>Place Order</Button>\r\n            <Button variant=\"text\" color=\"secondary\" onClick={clearCart}>Clear Cart</Button>\r\n          </>\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAU,CAAC,GAAGf,UAAU,CAACC,WAAW,CAAC;EAEnE,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMd,GAAG,CAACe,WAAW,CAAC;MAAEC,UAAU,EAAEL,IAAI,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE;IAAE,CAAC,CAAC;IAChEN,SAAS,CAAC,CAAC;IACXO,KAAK,CAAC,eAAe,CAAC;EACxB,CAAC;EAED,oBACEd,OAAA,CAACJ,GAAG;IAACmB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACjBjB,OAAA,CAACH,UAAU;MAACqB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAC5CjB,IAAI,CAACkB,MAAM,KAAK,CAAC,gBACdvB,OAAA,CAACH,UAAU;MAAAoB,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAC1CtB,OAAA,CAAAE,SAAA;MAAAe,QAAA,GACGZ,IAAI,CAACM,GAAG,CAACC,IAAI,iBACZZ,OAAA,CAACL,WAAW;QAAe6B,OAAO,EAAEZ,IAAK;QAACa,WAAW,EAAEA,CAAA,KAAMnB,cAAc,CAACM,IAAI,CAACC,EAAE,CAAE;QAACa,aAAa,EAAE;MAAM,GAAzFd,IAAI,CAACC,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoF,CAC9G,CAAC,eACFtB,OAAA,CAACF,MAAM;QAACoB,OAAO,EAAC,WAAW;QAACS,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEpB,WAAY;QAAAS,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtFtB,OAAA,CAACF,MAAM;QAACoB,OAAO,EAAC,MAAM;QAACS,KAAK,EAAC,WAAW;QAACC,OAAO,EAAErB,SAAU;QAAAU,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAAClB,EAAA,CAzBQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}